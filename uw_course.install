<?php

/**
 * @file
 * Install, update and uninstall functions for the uwcourses module.
 */

/**
 * Implements hook_install().
 */
function uw_course_install() {
    drupal_flush_all_caches();
    node_types_rebuild();
    
    $types = node_type_get_types();
    $uw_course_types = array('uw_course_list', 'uw_custom_course_list');
    foreach ($uw_course_types as $node_type) {
        add_custom_fields($node_type);
        node_add_body_field($types[$node_type]); 
    }
    variable_set("comment_uw_course_list", COMMENT_NODE_CLOSED);
    variable_set("comment_uw_custom_course_list", COMMENT_NODE_CLOSED);

    //add_custom_fields($types['uw_custom_course_list']);
    //node_add_body_field($types['uw_custom_course_list']); 
}

/**
 * Implements hook_uninstall().
 */
function uw_course_uninstall() {
    // clean up any data created in the database or any types added when it is uninstalled
    //$node_type = 'uw_course_list';
    $uw_course_types = array('uw_course_list', 'uw_custom_course_list');
    foreach ($uw_course_types as $node_type) {
        $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
        $result = db_query($sql, array(':type' => $node_type));
        $nodeids = array();
        foreach ($result as $row) {
            $nodeids[] = $row->nid;
        }
        node_delete_multiple($nodeids);
        delete_custom_fields($node_type);
        node_type_delete($node_type);
        field_purge_batch(500);        
    }
    // delete persistent variables
    variable_del("comment_uw_course_list");
    variable_del("comment_uw_custom_course_list");
}

/**
 * 
 * @return type
 */
function _uw_course_list_installed_fields() {
    $t = get_t();
    return array(
        'uw_course_curriculum_abbr' => array(
            'field_name' => 'uw_course_curriculum_abbr',
            'label' => $t('Curriculum Abbreviation'),
            'type' => 'text',
            'cardinality' => 1,
            'settings' => array(
                'max_length' => '6',
                'size' => '10',
                )
        ),
        'uw_course_quarter' => array(
            'field_name' => 'uw_course_quarter',
            'label' => $t('Quarter'),
            'type' => 'list_text',
            'cardinality' => 1,
            'settings' => array(
                'allowed_values' => array(
                    'autumn'=>'autumn',
                    'winter'=>'winter',
                    'spring'=>'spring',
                    'summer'=>'summer',
                    ),
                'allowed_values_function' => '',
              ),
        ),
        'uw_course_year' => array(
            'field_name' => 'uw_course_year',
            'label' => $t('Year'),
            'type' => 'text',
            'cardinality' => 1,
            'settings' => array(
                'max_length' => '4',
                'size' => '10',
                ),
        ),
//        'uw_course_page_size' => array(
//            'field_name' => 'uw_course_page_size',
//            'label' => $t('Page size'),
//            'type' => 'text',
//            'cardinality' => 1,
//        )
    );
}

/**
 * 
 * @return type
 */
function _uw_course_list_installed_instances() {
    $t = get_t();
    return array(
        'uw_course_curriculum_abbr' => array(
            'field_name' => 'uw_course_curriculum_abbr',
            'type' => 'text',
            'label' => $t('Curriculum Abbreviation'),
            'description' => $t('The curriculum abbreviation attribute identifies the department through which the course is offered; for example, "ENGL" is English and "CSE" is Computer Science and Engineering. Sometimes curriculum abbreviation is referred to as department code.<br>To be valid, a curriculum abbreviation must be between 2 and 6 alphabetic characters.<br>Only two special characters are permitted, the ampersand ("&") and a space; for example, "N&MES" is Near and Middle Eastern Studies, "B STR" is Biological Structure.<br>A complete overview of available course descriptions (and their abbreviation) can be found at ' . l('University of Washington Course Descriptions', 'http://www.washington.edu/students/crscat/', array('attributes'=>array('target'=>'_blank',)))),
            'required' => 1,
            'widget' => array(
                'type' => 'text_textfield',
                'settings' => array(
                    'max_length' => '6',
                    'size' => '10',
                    )
            ),
            'display' => array(
                'default' => array(
                    'label' => 'inline',
                    'settings' => array(
                        'type' => 'text_default',
                    ),
                ),
                'teaser' => array(),
            ),
        ),
        'uw_course_quarter' => array(
            'field_name' => 'uw_course_quarter',
            'type' => 'list_text',
            'label' => $t('Quarter'),
            'description' => $t('Quarter is a character field with one of the following values: winter, spring, summer, or autumn. If you are using the form, only those choices will be available in the selection box.'),
            'required' => 1,
            'widget' => array(
                'type' => 'options_select',
                'settings' => array(
                    'allowed_values' => array(
                        'autumn'=>'autumn',
                        'winter'=>'winter',
                        'spring'=>'spring',
                        'summer'=>'summer',
                        ),
                    'allowed_values_function' => '',
                  ),
            ),
            'display' => array(
                'default' => array(
                    'label' => 'inline',
                    'settings' => array(
                        'type' => 'list_text',
                    ),
                )
            )
        ),
        'uw_course_year' => array(
            'field_name' => 'uw_course_year',
            'type' => 'text',
            'label' => $t('Year'),
            'description' => $t('Year is a 4-digit number between 1900 and 9999.'),
            'required' => 1,
            'widget' => array(
                'type' => 'text_textfield',
                'settings' => array(
                    'max_length' => '4',
                    'size' => '10',
                    ),
            ),
            'display' => array(
                'default' => array(
                    'label' => 'inline',
                    'settings' => array(
                        'type' => 'text_default',
                    ),
                )
            )
        ),
//        'uw_course_page_size' => array(
//            'field_name' => 'uw_course_page_size',
//            'type' => 'text',
//            'label' => $t('Page size'),
//            'description' => $t('Determines the number of results that ca be returned. Leave blank for the maximum number (500) to be returned.'),
//            'widget' => array(
//                'type' => 'text_textfield'
//            ),
//            'settings' => array(
//                'max_length' => 3,
//                ),
//            'display' => array(
//                'example_node_list' => array(
//                    'label' => $t('Page size'),
//                    'type' => 'text'
//                )
//            )
//        )
            
    );
}

/**
 * 
 * @return type
 */
function _uw_custom_course_list_installed_fields() {
    $t = get_t();
    return array(
        'uw_course_custom' => array(
            'field_name'   => 'uw_course_custom',
            'label'        => $t('Custom Course List'),
            'cardinality'  => 1,
            'type'         => 'text',
            'settings'     => array(
                'max_length'  => 1000,
              ),
        ),
    );
}
/**
 * 
 * @return type
 */
function _uw_custom_course_list_installed_instances() {
    $t = get_t();
    return array(
        'uw_course_custom' => array(
            'field_name'  => 'uw_course_custom',
            'label'       => $t('Custom Course List'),
            'description' => $t('<p>Add one course per line. For example: GERMAN|220 or CSE|120<br>Make sure the curriculum and the course number are divided by a pipe character "|".<br>You may omit the course number (and pipe character) and retrieve the complete course listing of the curriculum.</p><p>The curriculum abbreviation attribute identifies the department through which the course is offered; for example, "ENGL" is English and "CSE" is Computer Science and Engineering. Sometimes curriculum abbreviation is referred to as department code.<br>To be valid, a curriculum abbreviation must be between 2 and 6 alphabetic characters.<br>Only two special characters are permitted, the ampersand ("&") and a space; for example, "N&MES" is Near and Middle Eastern Studies, "B STR" is Biological Structure.<br>A complete overview of available course descriptions (and their abbreviation) can be found at ' . l('University of Washington Course Descriptions', 'http://www.washington.edu/students/crscat/', array('attributes'=>array('target'=>'_blank',))) . '</p>'),
            'cardinality' => 1,
            'widget'      => array(
              'type'       => 'text_textarea',
              'settings'   => array('rows' => 10),
            ),
        ),
    );
}

/**
 * 
 * @see uw_course_install()
 */
function add_custom_fields($node_type) {
    
    switch ($node_type) {
        case "uw_course_list":
            foreach (_uw_course_list_installed_fields() as $field) {
                field_create_field($field);
            }
            foreach (_uw_course_list_installed_instances() as $fieldinstance) {
                $fieldinstance['entity_type'] = 'node';
                $fieldinstance['bundle'] = $node_type;
                field_create_instance($fieldinstance);
            }

            break;

        case "uw_custom_course_list":
            foreach (_uw_custom_course_list_installed_fields() as $field) {
                field_create_field($field);
            }
            foreach (_uw_custom_course_list_installed_instances() as $fieldinstance) {
                $fieldinstance['entity_type'] = 'node';
                $fieldinstance['bundle'] = $node_type;
                field_create_instance($fieldinstance);
            }

            break;
    }

}

/**
 * 
 * @see uw_course_uninstall()
 */
function delete_custom_fields($node_type) {
    
    switch ($node_type) {
        case "uw_course_list":
            foreach (array_keys(_uw_course_list_installed_fields()) as $field) {
                field_delete_field($field);
            }
            $instances = field_info_instances('node', $node_type);
            foreach ($instances as $instance_name => $fieldinstance) {
                field_delete_instance($fieldinstance);
            }

            break;

        case "uw_custom_course_list":
            foreach (array_keys(_uw_custom_course_list_installed_fields()) as $field) {
                field_delete_field($field);
            }
            $instances = field_info_instances('node', $node_type);
            foreach ($instances as $instance_name => $fieldinstance) {
                field_delete_instance($fieldinstance);
            }


            break;
    }
    
}